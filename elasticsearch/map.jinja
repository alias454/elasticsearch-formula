# Set default elasticsearch settings
{% set default_config = salt.grains.filter_by({
  'default':
  {
    'elasticsearch':
    {
      'restart_service_after_state_change': 'true',
      'cluster_name': 'graylog',
      'master_node': 'false',
      'data_node': 'true',
      'log_path': '/var/log/elasticsearch',
      'data_path': '/elasticsearch/data',
      'es_heap_size': '2g',
      'mlockall': 'true',
      'network_host': '0.0.0.0',
      'unicast_hosts': [],
      'initial_primaries_recoveries': '2',
      'concurrent_recoveries': '2',
      'recovery_max_bytes': '100mb',
      'recovery_concurrent_streams': '5',
      'sources': [],
      'mounts':
      {
        'create_data_dir': 'true',
        'data_dir_name': '/elasticsearch/data',
        'use_data_mount_device': 'false',
        'data_mount_fstype': 'xfs',
        'data_mount_device': '/dev/mapper/vg_data-lv_data',
        'create_archive_dir': 'true',
        'archive_dir_name': '/elasticsearch/archive',
        'use_archive_mount_device': 'false',
        'archive_mount_fstype': 'xfs',
        'archive_mount_device': '/dev/mapper/vg_archive-lv_archive',
      },
    },
  },
  'esnode00':
  {
    'elasticsearch':
    {
      'master_node': 'true',
      'data_node': 'false',
      'es_heap_size': '4g',
    },
  },
  'esnode01':
  {
    'elasticsearch':
    {
      'master_node': 'false',
      'data_node': 'true',
      'es_heap_size': '4g',
    },
  },
  'esnode02':
  {
    'elasticsearch':
    {
      'master_node': 'false',
      'data_node': 'true',
      'es_heap_size': '4g',
    },
  },
}, grain='host', base='default') %}

# Set kernel parameters to tune this instance
{% set kernel = {
  'kernel':
  {
    'vm_swappiness': '10',
    'vm_max_map_count': '262144',
  },
} %}

# Configure firewall from pillar
{% set os_lookup = {
  'RedHat':
  {
    'firewall':
    {
      'firewall_include': 'es-firewalld',
      'firewalld':
      {
        'status': salt['pillar.get']('firewall:firewalld:status', 'InActive')
      }
    }
  },
  'Debian':
  {
    'firewall':
    {
      'firewall_include': 'es-iptables',
      'iptables':
      {
        'status': salt['pillar.get']('firewall:iptables:status', 'InActive')
      }
    }
  }
} %}
{% set firewall = os_lookup.get(grains.os_family, {}) %} 

# Get settings for os_family
{% set os_lookup = {
  'RedHat':
  {
    'package':
    {
      'repo_version': '2.x',
      'repo_baseurl': 'https://packages.elastic.co/elasticsearch/2.x/centos',
      'repo_gpgkey': 'https://packages.elastic.co/GPG-KEY-elasticsearch',
      'java_pkg_name': 'java-1.8.0-openjdk-headless'
    }
  },
  'Debian':
  {
    'package':
    {
      'repo_version': '2.x',
      'repo_baseurl': 'deb https://packages.elastic.co/elasticsearch/2.x/debian stable main',
      'repo_gpgkey': 'https://packages.elastic.co/GPG-KEY-elasticsearch',
      'java_pkg_name': 'openjdk-8-jdk-headless'
    }
  }
} %}
{% set os_map = os_lookup.get(grains.os_family, {}) %} 

# Update the default config with kernel and firewall config
{% do default_config.update(kernel) %}
{% do default_config.update(firewall) %}
{% do default_config.update(os_map) %}

# Merge the default settings with pillar data
{% set host_lookup = salt['pillar.get']('elasticsearch:lookup', default=default_config, merge=True) %}
